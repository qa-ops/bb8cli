#!/bin/bash
# vim: ft=sh

load_conf repos

function _show_all() {
  in_cyan "Current repo list:\n"
  printf "%-20s %s\n" "ALIAS" "URL"
  for name in "${!repos[@]}";do
    printf "%-20s %s\n" ${name} ${repos[${name}]}
  done | sort
}


SUBCOMMAND_DESC="Provides interactions with QAOps projects"
SUBCOMMAND_HELP=$(cat <<EOH

show                  Will list all repos

open <ALIAS>          Will invoke 'open repo', in OSX this will
                      fire up your browser.

ALIAS                 Same as "open <ALIAS>" just a shortcut

download {REPO}       Will download https REPO to the parent folder of this CLI
                      ${PROJECTS_DIR}.
                      If REPO not given, all projects will be downloaded
                      [-ssh] Will download using ssh instead of https

$(_show_all)


EOH
)

function download_repo() {
  local repo="${1}"
  in_cyan "\nCloning repo: ${repo} to ${PROJECTS_DIR}\n"

  repo_subject="${repos[${repo}]##*/}"
  log "The repo subject found is: ${repo_subject}"

  [[ -z "${GIT_SSH_PROTOCOL}" ]] && error "user config not found.\nPlease execute 'bb setup check'"

  if [[ "${GIT_SSH_PROTOCOL}" == "true" ]]; then
    log "Cloning ${repo_subject} using SSH"
    git clone "git@github.com:qa-ops/${repo_subject}.git" "${PROJECTS_DIR}/${repo_subject}"
  else
    log "Cloning ${repo_subject} using https"
    git clone "${repos[${repo}]}" "${PROJECTS_DIR}/${repo_subject}"
  fi
}

function download_all_repos() {
  in_cyan "Downloading all repos \n"

  for repo in "${!repos[@]}"; do
    download_repo "${repo}"
  done
}

case ${1} in
  show)
    _show_all
  ;;
  open)
    log "Alias given '${2}'"
    [[ -n ${repos[${2}]} ]] && open_file ${repos[${2}]} || _show_all
  ;;
  download)
    repo="${2}"
    log "Repo given '${2}'"
    [[ -n ${repo} ]] && download_repo "${repo}" || download_all_repos
  ;;
  *)
    [[ -z ${1} ]] && return # early return when no argument is given
    log "Alias given '${1}'"
    [[ -n ${repos[${1}]} ]] && open_file ${repos[${1}]} || _show_all
  ;;
esac

