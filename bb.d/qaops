#!/usr/bin/env bash
load_conf repos

function _show_all() {
  in_cyan "\nList of all repository:"
  printf "%-20s %s\n" "ALIAS" "URL"
  printf "\n"
  for name in "${!repos[@]}"; do
    printf "%-20s %s\n" "${name}" "${repos[${name}]}"
  done | sort
}

# vim: ft=sh
SUBCOMMAND_DESC="Provides interactions with QAOps projects"
SUBCOMMAND_HELP=$(cat <<EOH

show                      List all repos
open <ALIAS>              Open the repository in the browser
ALIAS                     The same as "open <ALIAS>"
download <ALIAS>          Will download repo of the choosen ALIAS to the parent folder of this CLI
                            If <ALIAS> not given, all repositories will be downloaded

$(_show_all)

EOH
)

function download_repo() {
  local repo="${1}"
  in_cyan "Cloning repo: ${repo} to ${PROJECTS_DIR}"

  repo_name="${repos[${repo}]##*/}"
  log "The repo name found is: ${repo_name}"

  [[ -z "${GIT_SSH_PROTOCOL}" ]] && error "user config not found. \nPlease execute 'bb setup check'"

  if [[ "${GIT_SSH_PROTOCOL}" == "true" ]]; then
    log "Cloning ${repo_name} using SSH"
    git clone "git@github.com:qa-ops/${repo_name}.git" "${PROJECTS_DIR}/${repo_name}"
  else
    log "Cloning ${repo_name} using HTTPS"
    git clone "${repos[${repo}]}" "${PROJECTS_DIR}/${repo_name}"
  fi
}

function download_all_repo() {
  in_cyan "You are about to download ${#repos[@]} repositories. Are you sure? (y/n)"
  read -r response

  if [[ "${response}" != "y" ]]; then
    in_yellow "Download cancelled"
    exit 0
  fi

  in_cyan "Downloading all repos"

  for repo in "${!repos[@]}"; do
    download_repo "${repo}"
    echo -e "\n"
  done
}

#Different actions based on arguments
case ${1} in
  show)
    _show_all
  ;;
  open)
    alias="${2}"
    log "Alias given ${alias}"
    [[ -n "${repos[${alias}]}" ]] && open_file "${repos[${alias}]}" || _show_all
  ;;
  download)
    repo="${2}"
    log "Repo given: ${repo}"

    if [[ -n "${repo}" ]]; then
      download_repo "${repo}"
    else
      download_all_repo
    fi
  ;;
  *)
    alias="${1}"
    [[ -z "${alias}" ]] && return

    log "Alias given ${alias}"
    [[ -n "${repos[${alias}]}" ]] && open_file "${repos[${alias}]}" || _show_all
  ;;
esac

